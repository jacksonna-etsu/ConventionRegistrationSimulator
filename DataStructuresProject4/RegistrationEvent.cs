/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Solution/Project:  DataStructuresProject4/DataStructuresProject4
//	File Name:         RegistrationEvent.cs
//	Description:       An event generated by a registrant when they enter or leave the convention
//	Course:            CSCI 2210 - Data Structures - Section 002	
//	Author:            Nathaniel Jackson, jacksonna@etsu.edu
//	Created:           Sunday, November 11, 2018
//	Copyright:         Nathaniel Jackson, 2018
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataStructuresProject4
{
    /// <summary>
    /// RegistrationEvent - implements IComparable
    /// to relate to other events
    /// </summary>
    class RegistrationEvent : IComparable
    {
        #region Properties
        public EVENTTYPE Type { get; set; }
        public DateTime Time { get; set; }
        public int RegistrantNumber { get; set; }
        #endregion

        #region Constructors
        /// <summary>
        /// Default constructor - does basically nothing
        /// </summary>
        public RegistrationEvent()
        {

        }//end RegistrationEvent()

        /// <summary>
        /// Parameterized constructor, creates an event of type EVENTTYPE
        /// with a given time for a given registrant
        /// </summary>
        /// <param name="type"></param>
        /// <param name="time"></param>
        /// <param name="registrantNumber"></param>
        public RegistrationEvent(EVENTTYPE type, DateTime time, int registrantNumber)
        {
            Type = type;
            Time = time;
            RegistrantNumber = registrantNumber;
        }//end RegistrationEvent(EVENTTYPE, DateTime, int)
        #endregion

        #region IComparable Implementation
        /// <summary>
        /// Implementation of CompareTo
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        public int CompareTo(Object obj)
        {
            if (!(obj is RegistrationEvent))
                throw new ArgumentException("The argument is not a RegistrationEvent object");
            RegistrationEvent registrationEvent = (RegistrationEvent)obj;
            return (registrationEvent.Time.CompareTo(Time));
        }//end CompareTo(Object)
        #endregion
    }//end RegistrationEvent
}//end namespace
